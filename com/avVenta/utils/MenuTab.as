import com.avVenta.events.BroadcastableMovieClip;import com.avVenta.utils.TabbedMenu;class com.avVenta.utils.MenuTab extends BroadcastableMovieClip{		public static var ROLLOVER:String = "onRollOver";	public static var ROLLOUT:String = "onRollOut";	public static var RELEASE:String = "onRelease";		private var _parent:TabbedMenu;	private var previusTab:MenuTab;	private var index:Number;	private var txtLabel:TextField;	private var data:Object;	private var state:String;		private var defaultSelect:Boolean;	private var loaded:Boolean;		public function MenuTab(){		this.defaultSelect = false;		this.loaded = false;		this.unselect();		txtLabel.autoSize = "left";	}		public function init(index:Number, tab:Object){		this.index = index;		this.previusTab = this._parent.getPreviusTab(this);				this.setData(tab);				this.txtLabel.text = this.data.title;				this.setPosition();				this.enable();	}		public function setData(tab:Object){		//this.data = new Object();		//this.data.title = tab["title"];		//this.data.content = tab["content"];		this.data = tab;		//parses data and stores it on this.data	}		public function setPosition(){		if (this.previusTab == null){			switch (this._parent.align){				case "left":{					this._x = 0;					break;				}				case "right":{					this._x = 0 - this._width;					break;				}			}		}else{			switch (this._parent.align){				case "left":{					this._x = this.previusTab._x + this.previusTab.getWidth() + this._parent.tabDistance;					break;				}				case "right":{					this._x = this.previusTab._x - this._parent.tabDistance - this.getWidth();					break;				}			}		}			}		public function getIndex(){		return this.index;	}		public function onLoad(){		this._parent.registerTabEvents(this);				this._parent.addEventListener( TabbedMenu.DISABLE, this, "onMenuDisable");		this._parent.addEventListener( TabbedMenu.ENABLE, this, "onMenuEnable");				this.loaded = true;				if (this.defaultSelect)			select();		//else		//	unselect();			}		private function onMenuEnable(target, data){		this.enable();	}		private function onMenuDisable(target, data){		this.disable();	}			public function enable(){		this.onRollOver = rollOver;		this.onRollOut = rollOut;		this.onRelease = release;	}		public function disable(){		delete this.onRollOver;		delete this.onRollOut;		delete this.onRelease;	}		public function getWidth(){		return _width;	}		public function getHeight(){		return _height;	}		private function rollOver(){		broadcastEvent(MenuTab.ROLLOVER, {});	}		private function rollOut(){		broadcastEvent(MenuTab.ROLLOUT, {});	}		private function release(){		broadcastEvent(MenuTab.RELEASE, {});	}		public function select(){		if (this.loaded)			this.state = "selected";		else			this.defaultSelect = true;		}		public function unselect(){		this.state = "unselected";	}		public function getData():Object{		return data;	}}