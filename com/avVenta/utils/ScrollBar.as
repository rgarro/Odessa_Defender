import com.avVenta.events.*;class com.avVenta.utils.ScrollBar extends BroadcastableMovieClip{	public static var UPDATEPOSITION:String = "onUpdatePosition";		private var topY:Number;	private var bottomY:Number;	private var step:Number;	private var distance:Number; 	private var position:Number;	private var btnUpArrow:MovieClip;	private var btnDownArrow:MovieClip;	private var mcDragger:MovieClip;	private var mcBackground:MovieClip;		//public var updatePosition:Function;		public function ScrollBar(){				this.btnUpArrow.onPress = function(){			this.onEnterFrame = function(){				var newPos = this._parent.mcDragger._y - this._parent.step; 				if (newPos >= this._parent.topY){					this._parent.mcDragger._y = newPos;					this._parent.position = ((this._parent.mcDragger._y - this._parent.topY) * 100) / this._parent.distance;					//this._parent.updatePosition(this._parent.position);					this._parent.broadcastEvent(ScrollBar.UPDATEPOSITION, {position: this._parent.position});				}else{					var moved:Boolean = false;					while ((++newPos < this._parent.mcDragger._y)&&(!moved)){						if (newPos >= this._parent.topY){							this._parent.mcDragger._y = newPos;							moved = true;						}					}					if (moved){						this._parent.position = ((this._parent.mcDragger._y - this._parent.topY) * 100) / this._parent.distance;						//this._parent.updatePosition(this._parent.position);								this._parent.broadcastEvent(ScrollBar.UPDATEPOSITION, {position: this._parent.position});					}				}			}		}				this.btnUpArrow.onRelease = function(){			delete this.onEnterFrame;		}				this.btnUpArrow.onReleaseOutside = function(){			delete this.onEnterFrame;		}						this.btnDownArrow.onPress = function(){			this.onEnterFrame = function(){				var newPos = this._parent.mcDragger._y + this._parent.step; 				if (newPos <= this._parent.bottomY){					this._parent.mcDragger._y = newPos;					this._parent.position = ((this._parent.mcDragger._y - this._parent.topY) * 100) / this._parent.distance;					//this._parent.updatePosition(this._parent.position);					this._parent.broadcastEvent(ScrollBar.UPDATEPOSITION, {position: this._parent.position});				}else{					var moved:Boolean = false;					while ((--newPos > this._parent.mcDragger._y)&&(!moved)){						if (newPos <= this._parent.bottomY){							this._parent.mcDragger._y = newPos;							moved = true;						}					}					if (moved){						this._parent.position = ((this._parent.mcDragger._y - this._parent.topY) * 100) / this._parent.distance;						//this._parent.updatePosition(this._parent.position);								this._parent.broadcastEvent(ScrollBar.UPDATEPOSITION, {position: this._parent.position});					}				}			}		}				this.btnDownArrow.onRelease = function(){			delete this.onEnterFrame;		}				this.btnDownArrow.onReleaseOutside = function(){			delete this.onEnterFrame;		}				this.mcDragger.onPress = function(){			this.startDrag(false, this._x, this._parent.topY, this._x, this._parent.bottomY);						this._parent.onEnterFrame = function(){				this.position = ((this.mcDragger._y - this.topY) * 100) / this.distance;				//this.updatePosition(this.position, "tween");				this.broadcastEvent(ScrollBar.UPDATEPOSITION, {position: this.position, mode: "tween"});			}					}				this.mcDragger.onRelease = function(){			this.stopDrag();			delete this._parent.onEnterFrame;		}				this.mcDragger.onReleaseOutside = function(){			this.stopDrag();			delete this._parent.onEnterFrame;		}						//	}		public function init(height:Number){		this.mcBackground._height = height;		this.btnUpArrow._y = 0;		this.btnDownArrow._y = height - this.btnDownArrow._height;						if (this.btnUpArrow != undefined)			this.topY = this.btnUpArrow._height + 1;		else			this.topY = 0;					if (this.btnDownArrow != undefined)				this.bottomY = this.btnDownArrow._y - this.mcDragger._height - 1;		else			this.bottomY = height - this.mcDragger._height;				this.step = 2;			this.distance = this.bottomY - this.topY; 			this.position = 0;						this.mcDragger._y = this.topY;	}}